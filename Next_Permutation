// Given an array of integers arr[] representing a permutation, implement the next permutation that rearranges the numbers into the lexicographically next greater permutation.
// If no such permutation exists, rearrange the numbers into the lowest possible order (i.e., sorted in ascending order). 

// Note - A permutation of an array of integers refers to a specific arrangement of its elements in a sequence or linear order.

class Solution {
  public:
    void nextPermutation(vector<int>& arr) {
        // code here
        int n = arr.size(), i = n - 2, j;

        // Step 1: Find the first decreasing element from the right
        while (i >= 0 && arr[i] >= arr[i + 1]) {
            --i;
        }

        if (i >= 0) {
            // Step 2: Find the smallest element larger than arr[i] to the right
            j = n - 1;
            while (arr[j] <= arr[i]) {
                --j;
            }
            // Swap arr[i] and arr[j]
            swap(arr[i], arr[j]);
        }

        // Step 3: Reverse the subarray from i+1 to end
        reverse(arr.begin() + i + 1, arr.end());
        
    }
};
